/*Exercícios de PP*/
 Funções
1. Crie uma função que recebe como parâmetro um número inteiro e devolve o seu dobro.
#include <stdio.h>

int dobro(int n){
    return n * 2;
}
int main(){
    int num;
    printf("Digite um numero inteiro que deseja saber seu dobro: ");
    scanf("%d", &num);
    printf("O dobro de %d eh %d", num, dobro(num));
    return 0;
}

2. Faça uma função que receba a data atual (dia, mês e ano em inteiro) e exiba-a na tela no
formato textual por extenso. Ex.: Data: 18/11/2022, Imprimir: 18 de novembro de 2022

#include <stdio.h>
int porExtenso(int dd, int mm, int aa);
int main(){
    int dd, mm, aa;
    printf("Insira uma data no formato: dd/mm/aa: ");
    scanf("%d%d%d", &dd, &mm, &aa);
    porExtenso(dd, mm, aa);
    return 0;
}
int porExtenso(int dd, int mm, int aa){
    switch (mm)
    {
    case 1:
        printf("%d de Janeiro de %d", dd, aa);
        break;
    case 2:
        printf("%d de Fevereiro de %d", dd, aa);
        break;
    case 3:
        printf("%d de Março de %d", dd, aa);
        break;
    case 4:
        printf("%d de Abril de %d", dd, aa);
        break;
    case 5:
        printf("%d de Maio de %d", dd, aa);
        break;
    case 6:
        printf("%d de Junho de %d", dd, aa);
        break;
    case 7:
        printf("%d de Julho de %d", dd, aa);
        break;
    case 8:
        printf("%d de Agosto de %d", dd, aa);
        break;
    case 9:
        printf("%d de Setembro de %d", dd, aa);
        break;
    case 10:
        printf("%d de Outubro de %d", dd, aa);
        break;
    case 11:
        printf("%d de Novembro de %d", dd, aa);
        break;
    case 12:
        printf("%d de Dezembro de %d", dd, aa);
        break;
    default:
    printf("Data invalida!");
        break;
    }
    return 0;
}

3. Faça uma função para verificar se um número é positivo ou negativo. Sendo que o valor de
retorno será 1 se positivo, -1 se negativo e 0 se for igual a 0.
#include <stdio.h>
int verifica_sinal(int num);
int main(){
    int num;
    printf("Insira um numero: ");
    scanf("%d", &num);
    verifica_sinal(num);
    return 0;
}
int verifica_sinal(int num){
    if(num > 0){
        printf("%d eh postivo", num);
        return 1;
    } else if(num == 0){
        printf("%d eh zero", num);
        return 0;
    } else {
        printf("%d eh negativo", num);
        return -1;
    }
}

4. Faça uma função para verificar se um número é um quadrado perfeito. Um quadrado
perfeito é um número inteiro não negativo que pode ser expresso como o quadrado de
outro número inteiro. Ex.: 1, 4, 9...
#include <stdio.h>
#include <math.h>
int verifica_quadrado(int num);
int main(){
    int num;
    printf("Insira um numero: ");
    scanf("%d", &num);
    verifica_quadrado(num);
    return 0;
}
int verifica_quadrado(int num){
    if(((float) sqrt(num)) == ((int) sqrt(num))){
        printf("%d eh um quadrado perfeito!", num);
    } else {
        printf("%d nao eh um quadrado perfeito!", num);
    }
    return 0;
}

5. Faça uma função e um programa de teste para o cálculo do volume de uma esfera. Sendo
que o raio é passado por parâmetro.
#include <stdio.h>
int volume_esf(int raio);
int main(){
    int r;
    printf("Digite o raio da esfere que deseja calcular o volume: ");
    scanf("%d", &r);
    volume_esf(r);
    return 0;
}
int volume_esf(int raio){
    float vol = 4/3 * 3.14 * (raio * raio * raio);
    printf("O volume da esfera eh: %.2f", vol);
    return 0;
}

6. Faça uma função que receba 3 números inteiros como parâmetro, representando horas,
minutos e segundos, e os converta em segundos.
#include <stdio.h>
int converte_seg(int hh, int mm, int ss);
int main(){
    int hh, mm, ss;
    printf("Digite uma quantidade de tempo em horas, minutos e segundos, respectivamente: ");
    scanf("%d%d%d", &hh, &mm, &ss);
    converte_seg(hh, mm, ss);
    return 0;
}
int converte_seg(int hh, int mm, int ss){
    printf("A quantidade total, em segundos, eh: %d seg", (hh * 3600) + (mm * 60) + ss);
    return 0;
}

7. Faça uma função que receba uma temperatura em graus Celsius e retorne-a convertida em
graus Fahrenheit. A fórmula de conversão é: 𝐹 = 𝐶 ∗ (
9,0
5,0
) + 32,0, sendo F a temperatura
em Fahrenheit e C a temperatura em Celsius.

#include <stdio.h>
int converte_fahreheint(int tmp);
int main(){
    int tmp;
    printf("Informe uma temperatura em Celsius a ser convertida para Fahreheint: ");
    scanf("%d", &tmp);
    converte_fahreheint(tmp);
}
int converte_fahreheint(int tmp){
    printf("%d graus Celsius em Fahreheint eh: %.2f", tmp, (float) tmp * 9/5 + 32);
    return 0;
}


8. Sejam a e b os catetos de um triangulo, onde a hipotenusa é obtida pela equação:
hipotenusa = √𝑎
2 + 𝑏
2. Faça uma função que receba os valores de a e b e calcule o valor
da hipotenusa através da equação.

#include <stdio.h>
#include <math.h>

int hipotenusa(int a, int b);
int main(){
    int a, b;
    printf("Informe os valores dos dois catetos: ");
    scanf("%d%d", &a, &b);
    hipotenusa(a, b);
    return 0;
}#include <stdio.h>

int vol_cilindro(int h, int r);
int main(){
    int h, r;
    printf("Informe a altura e o raio do cilindro, respectivamente: ");
    scanf("%d%d", &h, &r);
    vol_cilindro(h, r);
    return 0;
}
int vol_cilindro(int h, int r){
    printf("O volume do cilindro eh: %.2f", 3.141592 * (r*r) * h);
    return 0;
}



int hipotenusa(int a, int b){
    printf("A hipotenusa eh: %.2f", sqrt((a*a) + (b*b)));
    return 0;
}


9. Faça uma função que receba a altura e o raio de um cilindro circular e retorne o volume do
cilindro. O volume de um cilindro circular é calculado por meio da seguinte fórmula: 𝑉 =
 ∗ 𝑟𝑎𝑖𝑜2
∗ 𝑎𝑙𝑡𝑢𝑟𝑎, onde  = 3.141592.
#include <stdio.h>

int vol_cilindro(int h, int r);
int main(){
    int h, r;
    printf("Informe a altura e o raio do cilindro, respectivamente: ");
    scanf("%d%d", &h, &r);
    vol_cilindro(h, r);
    return 0;
}
int vol_cilindro(int h, int r){
    printf("O volume do cilindro eh: %.2f", 3.141592 * (r*r) * h);
    return 0;
}


10. Faça uma função que receba dois números e retorne qual deles é o maior
#include <stdio.h>

int maior_ou_menor(int n1, int n2);
int main(){
    int n1, n2;
    printf("Digite dois numeros: ");
    scanf("%d%d", &n1, &n2);
    maior_ou_menor(n1, n2);
    return 0;
}
int maior_ou_menor(int n1, int n2){
    if(n1 > n2){
        printf("%d eh maior que %d", n1, n2);
    } else if(n1 == n2){
        printf("%d eh igual a %d", n1, n2);
    } else {
        printf("%d eh menor que %d", n1, n2);
    }
    return 0;
}

11. Elabore uma função que receba três notas de um aluno como parâmetros e uma letra. Se a
letra for A, a função deverá calcular a média aritmética das notas do aluno; se for P, deverá
calcular a média ponderada, com pesos 5, 3 e 2.

#include <stdio.h>
int media(int n1, int n2, int n3, char tipo);
int main(){
    int n1, n2, n3;
    char tipo;
    printf("Insira as tres notas: ");
    scanf("%d%d%d", &n1, &n2, &n3);
    printf("Insira o tipo de media que deseja (A para aritmetica ou P para ponderada): ");
    scanf(" %c", &tipo);
    media(n1, n2, n3, tipo);
    return 0;
}
int media(int n1, int n2, int n3, char tipo){
    if(tipo == 'a' || tipo == 'A'){
        printf("A media aritmetica eh: %.2f", (float) (n1 + n2 + n3)/3);
    } else if(tipo == 'p' || tipo == 'P'){
        printf("A media ponderada eh: %.2f", (float) ((n1 * 5) + (n2 * 3) + (n3 * 2))/10);
    }
    return 0;
}

12. Escreva uma função que receba um número inteiro maior do que zero e retorne a soma de
todos os seus algarismos. Por exemplo, ao número 251 corresponderá o valor 8 (2 + 5 + 1).
Se o número lido não for maior do que zero, o programa terminará com a mensagem
“Número inválido”.
#include <stdio.h>
int soma_alg(int num){
    int soma = 0;
    if(num > 0){
        while (num > 0)
        {
            soma += num%10;
            num /= 10;
        }
    } else {
        printf("Numero Invalido!");
    }
    printf("A soma dos algarismos eh: %d", soma);
    return 0;
}
int main(){
    int num;
    printf("Digite um numero para saber a soma de seus algarismos: ");
    scanf("%d", &num);
    soma_alg(num);
    return 0;
}

13. Faça uma função que receba dois valores numéricos e um símbolo. Este símbolo
representará a operação que se deseja efetuar com os números. Se o símbolo for ‘+’ deverá
ser realizada uma adição, se for ‘–‘ uma subtração, se for ‘*’ uma multiplicação e se for ‘/’
será efetuada uma divisão.

#include <stdio.h>
int operacao(int n1, int n2, char op){
    switch (op)
    {
    case '+':
        printf("A soma eh: %d", n1 + n2);
        break;
    case '-':
        printf("A subtracao eh: %d", n1 - n2);
        break;
    case '*':
        printf("O produto eh: %d", n1 * n2);
        break;
    case '/':
        printf("A divisao eh: %.2f", (float) n1 / n2);
        break;
    }
    return 0;
}
int main(){
    int n1, n2;
    char op;
    printf("Insira dois numeros para efetuar uma operacao: ");
    scanf("%d%d", &n1, &n2);
    printf("Informe a operacao que deseja realizar\n +_Adicao\n-_Subtracao\n*_multiplicacao\n/_divisao: ");
    scanf(" %c", &op);
    if(op == '/' && n2 == 0){
        printf("Impossivel dividir por zero!");
    } else {
        operacao(n1, n2, op);
    }
    return 0;
}

14. Faça uma função que receba a distância em Km e a quantidade de litros de gasolina
consumidos por um carro em um percurso, calcule o consumo em Km/l e escreva uma
mensagem de acordo com a tabela abaixo:
CONSUMO (Km/l) MENSAGEM
menor que 8 Venda o carro!
entre 8 e 14 Econômico!
maior que 14 Super econômico!

#include <stdio.h>
int consumo(int km, int lit){
    float cons = km / lit;
    if(cons < 8){
        printf("Venda o carro!!");
    } else if(cons >= 8 && cons <= 14){
        printf("Economico");
    } else {
        printf("Supereconomico");
    }
    return 0;
}
int main(){
    int km, lit;
    printf("Informe os km percorridos: ");
    scanf("%d", &km);
    printf("Informe a quantidade de litros de combustivel consumidos: ");
    scanf("%d", &lit);
    consumo(km, lit);
    return 0;
}


15. Crie um programa que receba três valores (obrigatoriamente maiores que zero),
representando as medidas dos três lados de um triângulo. Elabore funções para:
a) Determinar se eles lados formam um triângulo, sabendo que:
 O comprimento de cada lado de um triângulo é menor do que a soma dos outros
dois lados.
b) Determinar e mostrar o tipo de triângulo, caso as medidas formem um triângulo. Sendo
que:
 Chama-se equilátero o triângulo que tem três lados iguais;
 Denominam-se isósceles o triângulo que tem o comprimento de dois lados iguais;
 Recebe o nome de escaleno o triângulo que tem os três lados diferentes.
#include <stdio.h>
int tipo_triangulo(int a, int b, int c){
    if(a==b && a==c && b == c){
        printf("O triangulo formado eh equilatero");
    } else if(a!=b && a!=c && b!= c){
        printf("O triangulo formado eh escaleno!");
    } else {
        printf("O triangulo formado eh isoceles");
    }
    return 0;
}
int forma_triangulo(int a, int b, int c){
    if(a+b > c || a+c > b || c+b > a){
        printf("Esses lados formam um triangulo!\n");
        tipo_triangulo(a, b, c);
    } else {
        printf("Esses lados nao formam um triangulo!\n");
    }
    return 0;
}
int main(){
    int a, b, c;
    printf("Informe os tres lados do triangulo: ");
    scanf("%d%d%d", &a, &b, &c);
    if(a==0 || b==0 || c==0){
        printf("ERRO!Digite valores validos!");
    } else {
        forma_triangulo(a, b, c);
    }
    return 0;
}

16. Faça uma função chamada desenha_linha. Ele deve desenhar uma linha na tela usando uma
sequência de símbolos de igual (Ex.: ========). A função recebe por parâmetro quantos
sinais de igual serão mostrados.
#include <stdio.h>
int desenha_linha(int qtd){
    for (int i = 0; i < qtd; i++)
    {
        printf("=");
    }
    return 0;
}
int main(){
    int qtd;
    printf("Informe o tamanho da linha (em quantidade de '='): ");
    scanf("%d", &qtd);
    desenha_linha(qtd);
}

17. Faça uma função que receba dois números inteiros positivos por parâmetro e retorne a
soma dos N números inteiros existentes entre eles.
#include <stdio.h>
int soma_intervalo(int n1, int n2){
    int soma = 0;
    for (int i = n2 - 1; i > n1; i--)
    {
        soma += i;
    }
    printf("A soma entre %d e %d eh: %d", n1, n2, soma);
    return 0;
}
int main(){
    int n1, n2;
    printf("Informe dois numeros para saber a soma dos numeros entre eles: ");
    scanf("%d%d", &n1, &n2);
    soma_intervalo(n1, n2);
}

18. Faça uma função que receba por parâmetro dois valores inteiros x e z. Calcule e retorne o
resultado de x^z para o programa principal. Atenção não utilize nenhuma função pronta de
exponenciação.
#include <stdio.h>
int exponenciacao(int x, int z){
    int pot = x;
    for (int i = 0; i < z - 1; i++)
    {
        pot *= x;
    }
    printf("%d elevado a %d eh: %d", x, z, pot);
    return 0;
}
int main(){
    int x, z;
    printf("Insia a base: ");
    scanf("%d", &x);
    printf("Insira o expoente: ");
    scanf("%d", &z);   
    exponenciacao(x, z);
}

19. Faça uma função que receba um número inteiro positivo n e calcule o seu fatorial, n!
#include <stdio.h>   
int fatorial(int n){
    if(n == 0){
        return 1;
    } else {
        return n * fatorial(n - 1);
    }
} 
int main(){
    int n;
    printf("Insira um numero inteiro para saber seu fatorial: ");
    scanf("%d", &n);
    printf("O fatorial de %d eh %d", n, fatorial(n));
}

20. Escreva uma função para determinar a quantidade de números primos abaixo de N.
#include <stdio.h>   
int qtd_div(int n){
    int div = 0;
    for (int i = 1; i <= n; i++)
    {
        if(n % i == 0){
            div++;
        }
    }
    if(div == 2){
        return 1;
    } else {
        return 0;
    }
}

int main(){
    int n, qtd_pri = 0;
    printf("Digite um numero inteiro: ");
    scanf("%d", &n);
    for (int i = 1; i < n; i++)
    {
        if(qtd_div(i) == 1){
            qtd_pri++;
        }
    }
    printf("Ha %d primos", qtd_pri);
    return 0;
}

21. Crie uma função que receba como parâmetro um valor inteiro e gere como saída n linhas
com pontos de exclamação, conforme o exemplo abaixo (para n = 5):
!
!!
!!!
!!!!
!!!!!
#include <stdio.h>   
int arvore(int n){
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j <= i; j++)
        {
            printf("!");
        }
        printf("\n");
    }
    return 0;
}
int main(){
    int n;
    printf("Informe a quantidade de linhas: ");
    scanf("%d", &n);
    arvore(n);
    return 0;
}

22. Escreva uma função que gera um triângulo lateral de altura 2*n-1 e n largura. Por exemplo,
a saída para n = 4 seria:
*
**
***
****
***
**
*
#include <stdio.h>
int triangulo(int n){
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < i; j++)
        {
            printf("*");
        }
        printf("\n");
    }
    for (int i = 0; i < n; i++)
    {
        for (int j = n; j > i; j--)
        {
            printf("*");
        }
        printf("\n");
    }
    return 0;
}
int main(){
    int n;
    printf("Informe um numero: ");
    scanf("%d", &n);
    triangulo(n);
}

24. Escreva uma função que gera um triângulo de altura e lados n e base 2*n-1. Por exemplo, a
saída para n = 6 seria:
 *
 ***
 *****
 *******
 *********
***********

#include <stdio.h>
int triangulo(int n){
    int i, j, c = 1;
    for(i = n; i > 0; i--) {
        for( j = i - 1; j > 0; j--) {
            printf(" ");
        }
        for(j = 0; j < c; j++) {
            printf("*");
        }
        printf("\n");
        c += 2;
    }
    return 0;
}
int main(){
    int n;
    printf("Informe um numero: ");
    scanf("%d", &n);
    triangulo(n);
}
